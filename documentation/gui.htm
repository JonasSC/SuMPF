<html>
	<head>
		<title>SuMPF: GUI</title>
		<link rel="stylesheet" type="text/css" href="style.css" />
		<script type="text/javascript">
			dont_go_back = true;	// This is needed for the header script at the beginning of the body tag
		</script>
	</head>
	<body>
		<script src="header.js" type="text/javascript"></script>
		<table class='maintable'>
			<tr>
				<th colspan="3" class="headline">Graphical user interface</th>
			</tr>
			<tr>
				<td colspan="2" class="text">
					Although all the GUI-functionalities in SuMPF use the wxPython
					library, creating a GUI with plain wxPython is slightly different
					from creating a GUI with SuMPF.<br />
					The reasons for this different behavior are explained below.
					After that a short usage guide for how to create a GUI with
					SuMPF is given.
				</td>
				<td class="overview">
					<ul>
						<li><nobr><a href="#comparison">A comparison</a></nobr></li>
						<li><nobr><a href="#howto">How to ...</a></nobr></li>
					</ul>
				</td>
			</tr>
			<tr>
				<th colspan="3" class="section">
					<a name="comparison">A comparison</a>
					<a href="#top" class="toplink">Top&uarr;</a>
				</th>
			</tr>
			<tr>
				<td class="subsection"><nobr>plain wxPython</nobr></td>
				<td colspan="2" class="text">
					wxPython is a library for creating graphical applications.
					These applications usually have a main window which terminates
					the application when it is closed.<br />
					For this use case wxPython has a very good structure:
					<ol>
						<li>First the application and its windows are initialized</li>
						<li>Then wx is told which window is the main window</li>
						<li>Then the wx main loop is started. This main loop looks for GUI events and calls the respective handlers. The main loop terminates when the main window is closed</li>
						<li>When the main loop has finished, the destructors are called</li>
					</ol>
					In addition to the fact that this structure is fairly easy
					to understand and to implement, it has another big advantage:
					Since the window initialization and the main loop run in the
					same thread (usually the main one), only one thread updates
					the GUI. This is often required by the operating system.
				</td>
			</tr>
			<tr>
				<td class="subsection">SuMPF</td>
				<td colspan="2" class="text">
					Applications that shall be writable with the help of SuMPF
					do not necessarily fit in the wxPython structure with one main
					window.<br />
					For example consider an octave- or matlab-like application
					where the audio analysis is done on a command line while the
					results are plotted in popup windows that are started from
					the command line.<br />
					Such an application cannot be easily written with wxPython
					because of the following reasons:
					<ul>
						<li>None of the popup windows shall be the main window that closes all other windows when it is closed.</li>
						<li>It must be possible to show a plot with just one line of code. The sequence (initialize, set as main window, start main loop) is too long to be used in an application like the given example.</li>
						<li>The other parts of the application have to stay interactive, even when a GUI window is shown. This means that the main loop has to be run non-blockingly in a separate thread</li>
						<li>It has to be possible to explicitly run commands in the main loop (for example those which update the GUI).</li>
					</ul>
				</td>
			</tr>
			<tr>
				<th colspan="3" class="section">
					<a name="howto">How to write a GUI with SuMPF</a>
					<a href="#top" class="toplink">Top&uarr;</a>
				</th>
			</tr>
			<tr>
				<td colspan="3" class="text">
					Since SuMPF's GUIs are created with wxPython, their usage is
					almost equal. The differences in which SuMPF has to be used
					in a different manner are listed below:
					<ul>
						<li>
							<b>Do not care about initializing a wx.App or starting the main loop</b><br />
							SuMPF's GUI classes to that for you.
						</li>
						<li>
							<b>Use sumpf.gui.Window instead of wx.Frame or wx.Dialog</b><br />
							sumpf.gui.Window is basically a wx.Frame with some
							extra features like the Join-method that blocks until
							the window is closed.<br />
							This window class also takes care of starting the
							main loop.
						</li>
						<li>
							<b>Use sumpf.gui.run_in_mainloop for commands that update the GUI</b><br />
							Since often only one thread may update the GUI, many commands have to be called from inside the main loop. These commands and their parameters can be passed to sumpf.gui.run_in_mainloop(...).
						</li>
					</ul>
				</td>
			</tr>
			<tr>
				<td></td>
				<td width="100%"></td>
				<td></td>
			</tr>
		</table>
	</body>
</html>

