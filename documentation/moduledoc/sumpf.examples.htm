<html>
    <head>
        <title>ModuleDoc: sumpf.examples</title>
        <style type='text/css'>
            *{
                vertical-align: top;
            }
            *.maintable{
                width: 80%;
                margin-left: auto;
                margin-right: auto;
            }
            *.maintablecell{
                width: 25%;
                font-size: medium;
                background: #E0F0FF;
            }
            *.attribute{
            }
            *.attributes{
                font-size: larger;
                background: #6080FF;
            }
            *.modulepath{
                font-size: x-large;
                background: #6080FF;
            }
            *.moduledoc{
                font-size: medium;
                background: #E0F0FF;
            }
            *.headline{
                font-size: larger;
                background: #C8E0FF;
            }
            *.functiondoc{
                position: absolute;
                background-color: #C8E0FF;
                border-style: solid;
            }
        </style>
        <script type='text/javascript'>
            function Toggle(id){
                element = document.getElementById(id);
                if (element.style.display != 'none')
                    element.style.display = 'none';
                else{
                    HideFunctionDoc();
                    element.style.display = 'block';
                }
            }

            function HideFunctionDoc(){
                document.getElementById('ConvertFile').style.display = 'none';
                document.getElementById('RecordTransferFunction').style.display = 'none';
            }
        </script>
    </head>
    <body onLoad='HideFunctionDoc()'>
        <script src='../header.js' type='text/javascript'></script>
        <table class='maintable'>
            <tr>
                <td class='maintablecell modulepath'>Module</td>
                <th colspan='3' class='maintablecell modulepath'><a href='sumpf.htm'>sumpf</a>.<a href='sumpf.examples.htm'>examples</a></th>
            </tr>
            <tr>
                <td class='maintablecell headline'>Docstring</td>
                <td colspan='3' class='maintablecell moduledoc'>This name space contains examples that demonstrate the functionality of SuMPF.<br />
Maybe these examples are even useful programs.<br />
<br />
These examples can also be installed as separate programs in addition to SuMPF.</td>
            </tr>
            <tr>
                <th colspan='4' class='maintablecell attributes'>Attributes</th>
            </tr>
            <tr>
                <th class='maintablecell headline'>Modules</th>
                <th class='maintablecell headline'>Classes</th>
                <th class='maintablecell headline'>Functions</th>
                <th class='maintablecell headline'>Variables</th>
            </tr>
            <tr>
                <td class='maintablecell'>
                </td>
                <td class='maintablecell'>
                </td>
                <td class='maintablecell'>
                    <div class='attribute'>
                        <a href='javascript:Toggle("ConvertFile")'>ConvertFile<a>
                        <div class='functiondoc hidden' id='ConvertFile'>Converts an input file to an output file with the given format.<br />
    Depending on the input and output formats, a (inverse) fourier transformation<br />
    will be performed to be able to save the data in the correct output file format.<br />
    This way a saved transfer function can easily be converted to an impulse<br />
    response file.<br />
    If no output file name is given, the file name will be guessed from the input<br />
    file and the format.<br />
    If the given format is AUTO, the format will be guessed from the output file<br />
    name.<br />
    If the filenames end with wav or aif and the format is AUTO, the output file<br />
    will consist of floating point values.<br />
    The file format NUMPY_NPZ (*.npz) can be used for both Signals and Spectrums.<br />
    So if the file format is NUMPY_NPZ (because of either the file ending or the<br />
    given format), a (inverse) fourier transformation will be performed if the<br />
    input file has the format NUMPY_NPZ too. If the input file has another format,<br />
    the output data will be in the same domain as the input data.<br />
    @param input: the filename of the input file<br />
    @param output: the optional filename of the output file<br />
    @param file_format: the file format of the output file. This can be one of the following: AUTO,</div>
                    </div>
                    <div class='attribute'>
                        <a href='javascript:Toggle("RecordTransferFunction")'>RecordTransferFunction<a>
                        <div class='functiondoc hidden' id='RecordTransferFunction'>Shows a window in which it is possible to record and plot the transfer<br />
    function between a jack-Input and a jack-Output.<br />
    An Impulse response for the given transfer function is calculated as well.<br />
    After recording it is possible to apply some filtering to clean up the<br />
    resulting transfer function or impulse response from unwanted noise or<br />
    harmonic distortion.</div>
                    </div>
                </td>
                <td class='maintablecell'>
                </td>
            </tr>
        </table>
    </body>
</html>